import telebot
from telebot import types

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_API_TOKEN' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot('7438062994:AAGZtpLpUeT23cnRn9wVaAs8TWWkm6GujQY')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–£—Å–ª—É–≥–∏')
    btn2 = types.KeyboardButton('–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–£—Å–ª—É–≥–∏')
def services_menu(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/—É—Å–ª—É–≥–∏.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞')
    btn2 = types.KeyboardButton('–†–µ–∫–ª–∞–º–∞')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn2,btn_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–†–∞—Å—Å—ã–ª–∫–∞')
def software(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/—Ä–∞—Å—Å—ã–ª–∫–∞.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ö–æ–º–±–∞–π–Ω')
    btn2 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞ –≤ –ª—Å')
    btn3 = types.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1,btn2,btn3, btn_back)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≤ –ª–∏—á–∫—É\—á–∞—Ç–∞–º.", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö–æ–º–±–∞–π–Ω')
def software(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/–ö–æ–º–±–∞–π–Ω.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn_back)
    bot.send_message(message.chat.id, "–ö–æ–º–±–∞–π–Ω - –≤ –Ω–µ–º —Å—Ä–∞–∑—É —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–∞—Ä—É —É—Å–ª—É–≥: –ø–∞—Ä—Å–µ—Ä, –∏–Ω–≤–∞–π—Ç–µ—Ä, —Å–ø–∞–º–º–µ—Ä –∫–ª–∞—Å—Å–∏–∫, –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã. –¶–µ–Ω–∞: 70$", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–†–∞—Å—Å—ã–ª–∫–∞ –≤ –ª—Å')
def software(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/—Ä–∞—Å—Å—ã–ª–∫–∞–≤–ª—Å.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn_back)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≤ –ª—Å. –¶–µ–Ω–∞: 60$", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —á–∞—Ç–∞–º')
def software(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/—Ä–∞—Å—Å—ã–ª–∫–∞–ø–æ—á–∞—Ç–∞–º.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn_back)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≤ —á–∞—Ç–∞–º. –¶–µ–Ω–∞: 50$", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ó–∞–∫–∞–∑–∞—Ç—å')
def order_service(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn_back)
    bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @elison_smm", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–†–µ–∫–ª–∞–º–∞')
def advertisement(message):
    with open('C:/Users/380674914614/Desktop/bot/photo/—Ñ–æ—Ç–æ.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn_back)
    bot.send_message(message.chat.id, """–†–µ–∫–ª–∞–º–∏—Ä—É–µ–º:

–†–∞–±–æ—Ç–∞/–§—Ä–∏–ª–∞–Ω—Å 
–ë–∏—Ä–∂–∞ –∫–∞–Ω–∞–ª–æ–≤
–ë–∏–∑–Ω–µ—Å
–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ 
–ö–æ—É—á–∏–Ω–≥
–ë–∞–Ω–∫–∏/–ö—Ä–µ–¥–∏—Ç—ã
–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞
–ú–∞–π–Ω–∏–Ω–≥
–ú–õ–ú
–≠–∫–∑–æ—Ç–µ—Ä–∏–∫–∞
–¢–µ–Ω–µ–≤–∞—è —Ç–µ–º–∞—Ç–∏–∫–∞
–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è 
C—Ça–≤–∫–∏/Ka–∑–∏–Ω–æ
–ê–≤—Ç–æ 
A—Ä–±–∏—Ç—Äa–∂ 
Be–π–ø/–¢–∞–±a–∫ 
–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã

–∞ —Ç–∞–∫ –∂–µ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ""", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å?')
def how_to_order(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn_back)
    bot.send_message(message.chat.id, "–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @elison_smm", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def back_to_main_menu(message):
    send_welcome(message)


@bot.message_handler(func=lambda message: True)
def echo_all(message):
    if message.text == '–ö–æ–º–±–∞–π–Ω':
        bot.reply_to(message, "–ö–æ–º–±–∞–π–Ω - –≤ –Ω–µ–º —Å—Ä–∞–∑—É —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ø–∞—Ä—É —É—Å–ª—É–≥: –ø–∞—Ä—Å–µ—Ä, –∏–Ω–≤–∞–π—Ç–µ—Ä, —Å–ø–∞–º–º–µ—Ä –∫–ª–∞—Å—Å–∏–∫, –∞–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã. –¶–µ–Ω–∞: 70$")
    elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞ –≤ –õ–°':
        bot.reply_to(message, "–†–∞—Å—Å—ã–ª–∫–∞ –≤ –õ–° - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –≤ –ª–∏—á–∫—É. –¶–µ–Ω–∞: 50$")
    elif message.text == '–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã':
        bot.reply_to(message, "–ê–≤—Ç–æ–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã. –¶–µ–Ω–∞: 35$")
    elif message.text == '–ü—Ä–∞–≤–∏–ª–∞ —Å–∞–π—Ç–∞':
        bot.reply_to(message, "https://vm.tiktok.com/ZMrxhH1C6")
    elif message.text == '–°–æ–∑–¥–∞—Ç–µ–ª—å':
        bot.reply_to(message, "@alexhellupov")
    elif message.text == '–ü–∞—Å—Ö–∞–ª–∫–∞':
        bot.reply_to(message, "1488")
    else:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")

if __name__ == '__main__':
    bot.infinity_polling()









user_states = {}

# –ö—É—Ä—Å –æ–±–º–µ–Ω–∞
exchange_btc_rate = 5577915.00
exchange_eth_rate = 243251.40
exchange_ltc_rate = 6083.70
exchange_usdt_rate = 94.38 
exchange_usdc_rate = 94.38 

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    btn1 = types.KeyboardButton('–ö—É–ø–∏—Ç—å')
    btn2 = types.KeyboardButton('–ü—Ä–æ–¥–∞—Ç—å')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, """‚≠ïÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç BitCash!

üîÑ –ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 BTC ‚Üí 5577915.00 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 BTC ‚Üí 5312300.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 ETH ‚Üí 243251.40 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 ETH ‚Üí 231668.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 LTC ‚Üí 6083.70 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 LTC ‚Üí 5794.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 USDT TRC20 ‚Üí 94.38 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 USDT TRC20 ‚Üí 89.89 ‚ÇΩ""", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å')
def services_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_btc = types.KeyboardButton('–ö—É–ø–∏—Ç—å BTC')
    btn_eth = types.KeyboardButton('–ö—É–ø–∏—Ç—å ETH')
    btn_usdt = types.KeyboardButton('–ö—É–ø–∏—Ç—å USDT')
    btn_usdc = types.KeyboardButton('–ö—É–ø–∏—Ç—å USDC')
    btn_ltc = types.KeyboardButton('–ö—É–ø–∏—Ç—å LTC')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn_btc, btn_eth, btn_usdt, btn_usdc, btn_ltc, btn_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=markup)   

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å BTC')
def buy_btc(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö", callback_data="rub_btc"))
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC", callback_data="btc"))
    
    bot.send_message(message.chat.id, 
                     "–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 5609310.00 –†–£–ë - 1 BTC\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.00049 BTC\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 15.05999401 BTC", 
                     reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å ETH')
def buy_eth(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö", callback_data="rub_eth"))
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH", callback_data="eth"))
    
    bot.send_message(message.chat.id, 
                     "–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 243251.40 –†–£–ë - 1 ETH\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.01 ETH\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1000 ETH", 
                     reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å LTC')
def buy_ltc(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö", callback_data="rub_ltc"))
    markup.add(InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC", callback_data="ltc"))
    
    bot.send_message(message.chat.id, 
                     "–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 6083.70 –†–£–ë - 1 LTC\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.1 LTC\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1000 LTC", 
                     reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "rub_btc":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_rub_amount_btc)
    elif call.data == "btc":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_btc_amount)
    elif call.data == "rub_eth":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_rub_amount_eth)
    elif call.data == "eth":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_eth_amount)
    elif call.data == "rub_ltc":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_rub_amount_ltc)
    elif call.data == "ltc":
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC –¥–ª—è –æ–±–º–µ–Ω–∞:")
        bot.register_next_step_handler(msg, process_ltc_amount)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö –¥–ª—è BTC
def process_rub_amount_btc(message):
    try:
        rub_amount = float(message.text)
        btc_amount = rub_amount / exchange_btc_rate
        bot.send_message(message.chat.id, f"–ó–∞ {rub_amount} —Ä—É–±–ª–µ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {btc_amount:.8f} BTC.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ BTC
def process_btc_amount(message):
    try:
        btc_amount = float(message.text)
        rub_amount = btc_amount * exchange_btc_rate
        bot.send_message(message.chat.id, f"–ó–∞ {btc_amount} BTC –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å {rub_amount:.2f} —Ä—É–±–ª–µ–π.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö –¥–ª—è ETH
def process_rub_amount_eth(message):
    try:
        rub_amount = float(message.text)
        eth_amount = rub_amount / exchange_eth_rate
        bot.send_message(message.chat.id, f"–ó–∞ {rub_amount} —Ä—É–±–ª–µ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {eth_amount:.8f} ETH.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ ETH
def process_eth_amount(message):
    try:
        eth_amount = float(message.text)
        rub_amount = eth_amount * exchange_eth_rate
        bot.send_message(message.chat.id, f"–ó–∞ {eth_amount} ETH –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å {rub_amount:.2f} —Ä—É–±–ª–µ–π.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö –¥–ª—è LTC
def process_rub_amount_ltc(message):
    try:
        rub_amount = float(message.text)
        ltc_amount = rub_amount / exchange_ltc_rate
        bot.send_message(message.chat.id, f"–ó–∞ {rub_amount} —Ä—É–±–ª–µ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {ltc_amount:.8f} LTC.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ LTC
def process_ltc_amount(message):
    try:
        ltc_amount = float(message.text)
        rub_amount = ltc_amount * exchange_ltc_rate
        bot.send_message(message.chat.id, f"–ó–∞ {ltc_amount} LTC –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å {rub_amount:.2f} —Ä—É–±–ª–µ–π.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
