import telebot
from telebot import types

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_API_KEY' –Ω–∞ –≤–∞—à API –∫–ª—é—á –æ—Ç BotFather
bot = telebot.TeleBot('7298626795:AAHSg1ICslDatqnQfHAVZyc5TlRrxMhpzos')


user_states = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(row_width=2)
    btn1 = types.KeyboardButton('–ö—É–ø–∏—Ç—å')
    btn2 = types.KeyboardButton('–ü—Ä–æ–¥–∞—Ç—å')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, """‚≠ïÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç BitCash!

üîÑ –ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 BTC ‚Üí 5577915.00 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 BTC ‚Üí 5312300.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 ETH ‚Üí 243251.40 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 ETH ‚Üí 231668.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 LTC ‚Üí 6083.70 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 LTC ‚Üí 5794.00 ‚ÇΩ

‚¨áÔ∏è –ü–æ–∫—É–ø–∫–∞: 1 USDT TRC20 ‚Üí 94.38 ‚ÇΩ
‚¨ÜÔ∏è –ü—Ä–æ–¥–∞–∂–∞: 1 USDT TRC20 ‚Üí 89.89 ‚ÇΩ""", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å')
def services_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_btc = types.KeyboardButton('–ö—É–ø–∏—Ç—å BTC')
    btn_eth = types.KeyboardButton('–ö—É–ø–∏—Ç—å ETH')
    btn_usdt = types.KeyboardButton('–ö—É–ø–∏—Ç—å USDT')
    btn_usdc = types.KeyboardButton('–ö—É–ø–∏—Ç—å USDC')
    btn_ltc = types.KeyboardButton('–ö—É–ø–∏—Ç—å LTC')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn_btc, btn_eth, btn_usdt, btn_usdc, btn_ltc, btn_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å BTC')
def buy_btc(message):
    bot.send_message(message.chat.id, """üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 5572455.00 –†–£–ë ‚Üí 1 BTC
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.00049 BTC
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 15.14530008 BTC

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ BTC:""")
    user_states[message.chat.id] = 'buy_btc'

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å ETH')
def buy_eth(message):
    bot.send_message(message.chat.id, """üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 243516.00 –†–£–ë ‚Üí 1 ETH
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.01125 ETH
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 217.54699897 ETH

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ ETH:""")
    user_states[message.chat.id] = 'buy_eth'

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å LTC')
def buy_ltc(message):
    bot.send_message(message.chat.id, """üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 6091.05 –†–£–ë ‚Üí 1 LTC
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.44975 LTC
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1629.63282 LTC

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ LTC:""")
    user_states[message.chat.id] = 'buy_ltc'

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å USDC')
def buy_usdc(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_1 = types.KeyboardButton('USDC TRC20')
    btn_2 = types.KeyboardButton('USDC ERC20')
    btn_3 = types.KeyboardButton('USDC BEP20')
    btn_4 = types.KeyboardButton('USDC Solana')
    btn_5 = types.KeyboardButton('USDC Arbitrum')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn_1, btn_2, btn_3, btn_4, btn_5, btn_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–ö—É–ø–∏—Ç—å USDT')
def buy_usdt(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_1 = types.KeyboardButton('USDT TRC20')
    btn_2 = types.KeyboardButton('USDT ERC20')
    btn_3 = types.KeyboardButton('USDT BEP20')
    btn_4 = types.KeyboardButton('USDT Solana')
    btn_5 = types.KeyboardButton('USDT Arbitrum')
    btn_back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn_1, btn_2, btn_3, btn_4, btn_5, btn_back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text.isdigit())
def handle_amount(message):
    amount_rub = float(message.text)
    state = user_states.get(message.chat.id)

    if state == 'buy_btc':
        exchange_rate = 5572455.00
        amount_btc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_btc:.8f} BTC –∑–∞ {amount_rub} RUB")
    elif state == 'buy_eth':
        exchange_rate = 243251.40
        amount_eth = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_eth:.8f} ETH –∑–∞ {amount_rub} RUB")
    elif state == 'buy_ltc':
        exchange_rate = 6091.05
        amount_ltc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_ltc:.8f} LTC –∑–∞ {amount_rub} RUB")






@bot.message_handler(func=lambda message: message.text == 'USDT Arbitrum')
def buy_usdt_arbitrum(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDT Arbitrum
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDT Arbitrum
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDT Arbitrum

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDT Arbitrum:""")
    user_states[message.chat.id] = 'buy_usdt_arbitrum'
    print(f"User state set to 'buy_usdt_arbitrum' for user {message.chat.id}")

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'buy_usdt_arbitrum')
def calculate_usdt_arbitrum(message):
    print(f"calculate_usdt_arbitrum called for user {message.chat.id} with message: {message.text}")
    try:
        rub_amount = float(message.text)
        print(f"rub_amount: {rub_amount}")
        usdt_amount = rub_amount / 94.38
        print(f"usdt_amount: {usdt_amount}")
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {usdt_amount:.2f} USDT Arbitrum. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:")
        user_states[message.chat.id] = 'enter_wallet_address'
        print(f"User state set to 'enter_wallet_address' for user {message.chat.id}")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö.")
        print(f"Invalid amount entered by user {message.chat.id}")

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == 'enter_wallet_address')
def get_wallet_address(message):
    print(f"get_wallet_address called for user {message.chat.id} with message: {message.text}")
    wallet_address = message.text
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
    bot.send_message(message.chat.id, f"–í–∞—à –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: {wallet_address}. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!")
    user_states[message.chat.id] = None
    print(f"Wallet address received from user {message.chat.id}: {wallet_address}")

print("Bot is running...")
bot.polling()
print("Polling started...")













@bot.message_handler(func=lambda message: message.text == 'USDT Solana')
def buy_usdt_solana(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDT Solana
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDT Solana
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDT Solana

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDT Solana:""")
    user_states[message.chat.id] = 'buy_usdt_solana'

@bot.message_handler(func=lambda message: message.text == 'USDT TRC20')
def buy_usdt_trc20(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDT TRC-20
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDT TRC-20
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDT TRC-20

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDT TRC20:""")
    user_states[message.chat.id] = 'buy_usdt_trc20'

@bot.message_handler(func=lambda message: message.text.isdigit())
def handle_usdt_amount(message):
    amount_rub = float(message.text)
    exchange_rate = 94.38  # –ü—Ä–∏–º–µ—Ä –∫—É—Ä—Å–∞ –æ–±–º–µ–Ω–∞
    state = user_states.get(message.chat.id)

    if state == 'buy_usdt_arbitrum':
        amount_usdt = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdt:.8f} USDT Arbitrum –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdt_solana':
        amount_usdt = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdt:.8f} USDT Solana –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdt_trc20':
        amount_usdt = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdt:.8f} USDT TRC20 –∑–∞ {amount_rub} RUB")



@bot.message_handler(func=lambda message: message.text == 'USDC Arbitrum')
def buy_usdc_arbitrum(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDC Arbitrum
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDC Arbitrum
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDC Arbitrum

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDC Arbitrum:""")
    user_states[message.chat.id] = 'buy_usdc_arbitrum'

@bot.message_handler(func=lambda message: message.text == 'USDC Solana')
def buy_usdc_solana(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDC Solana
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDC Solana
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDC Solana

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDC Solana:""")
    user_states[message.chat.id] = 'buy_usdc_solana'

@bot.message_handler(func=lambda message: message.text == 'USDC TRC20')
def buy_usdc_trc20(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDC TRC-20
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDC TRC-20
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDC TRC-20

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDC TRC20:""")
    user_states[message.chat.id] = 'buy_usdc_trc20'

@bot.message_handler(func=lambda message: message.text == 'USDC ERC20')
def buy_usdc_erc20(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDC ERC-20
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDC ERC-20
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDC ERC-20

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDC ERC-20:""")
    user_states[message.chat.id] = 'buy_usdc_erc20'

@bot.message_handler(func=lambda message: message.text == 'USDC BEP20')
def buy_usdc_bep20(message):
    bot.send_message(message.chat.id, """
üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 94.38 –†–£–ë ‚Üí 1 USDC BEP-20
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 29.0 USDC BEP-20
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 127416.8 USDC BEP-20

–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ USDC BEP-20:""")
    user_states[message.chat.id] = 'buy_usdc_bep20'

@bot.message_handler(func=lambda message: message.text.isdigit())
def handle_amount(message):
    amount_rub = float(message.text)
    exchange_rate = 94.38  # –ü—Ä–∏–º–µ—Ä –∫—É—Ä—Å–∞ –æ–±–º–µ–Ω–∞
    state = user_states.get(message.chat.id)

    if state == 'buy_usdc_arbitrum':
        amount_usdc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdc:.8f} USDC Arbitrum –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdc_solana':
        amount_usdc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdc:.8f} USDC Solana –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdc_trc20':
        amount_usdc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdc:.8f} USDC TRC20 –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdc_erc20':
        amount_usdc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdc:.8f} USDC ERC20 –∑–∞ {amount_rub} RUB")
    elif state == 'buy_usdc_bep20':
        amount_usdc = amount_rub / exchange_rate
        bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_usdc:.8f} USDC BEP20 –∑–∞ {amount_rub} RUB")

@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def back_to_main_menu(message):
    send_welcome(message)



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
